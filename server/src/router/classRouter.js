const express = require('express')
const router = express.Router()
const ClassController = require('../controllers/classController')
const { verifyToken } = require('../middlewares/jsonWebTokens')
const { checkRole, ROLES } = require('../middlewares/accessControl')

router.post('/v1/create-class/:teacherId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.createClass)
router.get('/v1/fetch-class-invites/:studentId', verifyToken, checkRole([ROLES.LEVEL_1]), ClassController.fetchClassInvites)
router.post('/v1/invite-student/:teacherId/:classId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.inviteStudent)
router.put('/v1/accept-invite/:studentId/:classId', verifyToken, checkRole([ROLES.LEVEL_1]), ClassController.acceptInvite)
router.delete('/v1/reject-invite/:studentId/:classId', verifyToken, checkRole([ROLES.LEVEL_1]), ClassController.rejectInvite)
router.get('/v1/fetch-teacher-classes/:teacherId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.fetchTeacherClasses)
router.post('/v1/join-class/:studentId', verifyToken, checkRole([ROLES.LEVEL_1]), ClassController.joinClass)
router.get('/v1/search-class', verifyToken, checkRole([ROLES.LEVEL_1]), ClassController.searchClass)
router.get('/v1/fetch-pending-approvals/:classId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.fetchPendingApprovals)
router.put('/v1/accept-pending-approval/:classId/:studentId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.acceptPendingApprovals)
router.delete('/v1/reject-pending-approval/:classId/:studentId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.rejectPendingApprovalRequest)
router.post('/v1/create-class-announcement/:teacherId/:classId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.createClassAnnouncement)
router.get('/v1/fetch-announcements/:classId', verifyToken, checkRole([ROLES.LEVEL_2, ROLES.LEVEL_1]), ClassController.fetchClassAnnouncements)
router.get('/v1/fetch-joined-classes/:studentId', verifyToken, checkRole([ROLES.LEVEL_1]), ClassController.fetchStudentJoinedClasses)
router.delete('/v1/remove-student/:classId/:studentId', verifyToken, checkRole([ROLES.LEVEL_2]), ClassController.removeStudent)

module.exports = router